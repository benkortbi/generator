{"ast":null,"code":"var _jsxFileName = \"/storage/emulated/0/Meme/src/components/Figure.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Container from './../Ui/Container.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Figure = props => {\n  _s();\n  const [data, setData] = useState(null);\n  const [img, setImg] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('https://api.imgflip.com/get_memes');\n        const data = await response.json();\n        setData(data);\n        for (let i = 0; i < data.data.memes.length; i++) {\n          const randomUrl = Math.floor(Math.random() * i);\n          setImg(data.data.memes[randomUrl].url);\n        }\n      } catch (e) {\n        alert(e);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"figure--section w-full h-full\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"w-full h-34 px-2 relative mx-auto mt-12 mb-8 relative text-center\",\n        children: [data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meme--text absolute -translate-x-1/2 text-3xl text-white font-bold top-4 w-34\",\n            children: props.Toptxt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"meme--text absolute -translate-x-1/2 text-3xl text-white font-bold bottom-4 w-34\",\n            children: props.Bottomtxt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \" w-full h-full object-cover rounded-md max-h-96\",\n            src: img,\n            Loading: \"lazy\",\n            alt: \"meme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 5\n          }, this), \" \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 114\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"w-\",\n          children: \"Generate new one \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(Figure, \"cvEiOElusN62GJrdl9CHkWmGLw0=\");\n_c = Figure;\nexport default Figure;\nvar _c;\n$RefreshReg$(_c, \"Figure\");","map":{"version":3,"names":["useState","useEffect","Container","Figure","props","data","setData","img","setImg","fetchData","response","fetch","json","i","memes","length","randomUrl","Math","floor","random","url","e","alert","Toptxt","Bottomtxt"],"sources":["/storage/emulated/0/Meme/src/components/Figure.jsx"],"sourcesContent":["import { useState,useEffect } from 'react'\nimport Container from './../Ui/Container.jsx'\nconst Figure = (props) => {\n  const [data, setData] = useState(null) ;\nconst [img, setImg] = useState(null);\nuseEffect (() => {\nasync function fetchData () {\ntry {\nconst response = await fetch\n('https://api.imgflip.com/get_memes');\nconst data = await response.json();\nsetData(data) ;\nfor(let i = 0; i < data.data.memes.length; i++) {\nconst randomUrl = Math.floor(Math.random() * i);\nsetImg(data.data.memes[randomUrl].url);\n}\n} catch(e){\nalert(e);\n}\n}\nfetchData()\n}, []);\n  return(\n    <div className='figure--section w-full h-full'>\n    <Container>\n    <figure className='w-full h-34 px-2 relative mx-auto mt-12 mb-8 relative text-center'>\n     {data ? <> <span className='meme--text absolute -translate-x-1/2 text-3xl text-white font-bold top-4 w-34'>\n    {props.Toptxt}\n    </span>\n     <span className='meme--text absolute -translate-x-1/2 text-3xl text-white font-bold bottom-4 w-34'>\n    {props.Bottomtxt}\n    </span>\n    <img className=' w-full h-full object-cover rounded-md max-h-96' src={img} Loading=\"lazy\" alt='meme'/> </> : <span>Loading</span> }\n    <button className=\"w-\">Generate new one </button>\n    </figure> \n    </Container>\n    </div>\n    )\n}\nexport default Figure;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,uBAAuB;AAAA;AAAA;AAC7C,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpCC,SAAS,CAAE,MAAM;IACjB,eAAeQ,SAAS,GAAI;MAC5B,IAAI;QACJ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3B,mCAAmC,CAAC;QACrC,MAAMN,IAAI,GAAG,MAAMK,QAAQ,CAACE,IAAI,EAAE;QAClCN,OAAO,CAACD,IAAI,CAAC;QACb,KAAI,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,IAAI,CAACA,IAAI,CAACS,KAAK,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;UAChD,MAAMG,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,CAAC,CAAC;UAC/CL,MAAM,CAACH,IAAI,CAACA,IAAI,CAACS,KAAK,CAACE,SAAS,CAAC,CAACI,GAAG,CAAC;QACtC;MACA,CAAC,CAAC,OAAMC,CAAC,EAAC;QACVC,KAAK,CAACD,CAAC,CAAC;MACR;IACA;IACAZ,SAAS,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EACJ,oBACE;IAAK,SAAS,EAAC,+BAA+B;IAAA,uBAC9C,QAAC,SAAS;MAAA,uBACV;QAAQ,SAAS,EAAC,mEAAmE;QAAA,WACnFJ,IAAI,gBAAG;UAAA,6BAAG;YAAM,SAAS,EAAC,+EAA+E;YAAA,UAC1GD,KAAK,CAACmB;UAAM;YAAA;YAAA;YAAA;UAAA,QACN,eACN;YAAM,SAAS,EAAC,kFAAkF;YAAA,UAClGnB,KAAK,CAACoB;UAAS;YAAA;YAAA;YAAA;UAAA,QACT,eACP;YAAK,SAAS,EAAC,iDAAiD;YAAC,GAAG,EAAEjB,GAAI;YAAC,OAAO,EAAC,MAAM;YAAC,GAAG,EAAC;UAAM;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA,gBAAI,gBAAG;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAoB,eACjI;UAAQ,SAAS,EAAC,IAAI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAA2B;MAAA;QAAA;QAAA;QAAA;MAAA;IACxC;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACN;AAEV,CAAC;AAAA,GApCKJ,MAAM;AAAA,KAANA,MAAM;AAqCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}