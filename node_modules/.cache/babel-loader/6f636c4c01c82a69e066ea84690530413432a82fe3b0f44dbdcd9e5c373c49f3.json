{"ast":null,"code":"var _jsxFileName = \"/storage/emulated/0/Meme/src/components/Figure.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Container from './../Ui/Container.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Figure = props => {\n  _s();\n  const [memsArray, setMemesArray] = useState(null);\n  const [img, setImg] = useState(null);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('https://api.imgflip.com/get_memes');\n        const data = await response.json();\n        setData(data);\n        for (let i = 0; i < memsArray.data.memes.length; i++) {\n          const randomUrl = Math.floor(Math.random() * i);\n          setImg(memsArray.data.memes[randomUrl].url);\n        }\n      } catch (e) {\n        alert(e);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"figure--section w-full h-full\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: memsArray ? /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"w-full h-34 px-2 relative mx-auto mt-14 relative text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meme--text absolute -translate-x-1/2 text-4xl text-white font-bold top-5\",\n          children: props.Toptxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meme--text absolute -translate-x-1/2 text-4xl text-white font-bold bottom-5\",\n          children: props.Bottomtxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \" w-full h-full object-cover rounded-md\",\n          src: img,\n          Loading: \"lazy\",\n          alt: \"meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Figure, \"uvcRRZCR9pQw6cYHkvDTUdnhFbU=\");\n_c = Figure;\nexport default Figure;\nvar _c;\n$RefreshReg$(_c, \"Figure\");","map":{"version":3,"names":["useState","useEffect","Container","Figure","props","memsArray","setMemesArray","img","setImg","fetchData","response","fetch","data","json","setData","i","memes","length","randomUrl","Math","floor","random","url","e","alert","Toptxt","Bottomtxt"],"sources":["/storage/emulated/0/Meme/src/components/Figure.jsx"],"sourcesContent":["import { useState,useEffect } from 'react'\nimport Container from './../Ui/Container.jsx'\nconst Figure = (props) => {\n  const [memsArray, setMemesArray] = useState\n(null) ;\nconst [img, setImg] = useState (null);\nuseEffect ( () => {\nasync function fetchData () {\ntry {\nconst response = await fetch\n('https://api.imgflip.com/get_memes');\nconst data = await response.\njson();\nsetData(data) ;\nfor (let i = 0; i < memsArray.data.\nmemes.length; i++) {\nconst randomUrl = Math. floor\n(Math.random() * i);\nsetImg (memsArray.data.memes[randomUrl].url);\n}\n} catch(e){\nalert (e);\n}\n}\nfetchData();\n}, []);\n  return(\n    <div className='figure--section w-full h-full'>\n    <Container>\n    {memsArray ? <figure className='w-full h-34 px-2 relative mx-auto mt-14 relative text-center'>\n     <span className='meme--text absolute -translate-x-1/2 text-4xl text-white font-bold top-5'>\n    {props.Toptxt}\n    </span>\n     <span className='meme--text absolute -translate-x-1/2 text-4xl text-white font-bold bottom-5'>\n    {props.Bottomtxt}\n    </span>\n    <img className=' w-full h-full object-cover rounded-md' src={img} Loading=\"lazy\" alt='meme'/>\n    </figure> : <span>Loading</span> }\n    </Container>\n    </div>\n    )\n}\nexport default Figure;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,uBAAuB;AAAA;AAC7C,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAC5C,IAAI,CAAC;EACN,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAE,IAAI,CAAC;EACrCC,SAAS,CAAG,MAAM;IAClB,eAAeQ,SAAS,GAAI;MAC5B,IAAI;QACJ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3B,mCAAmC,CAAC;QACrC,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAC3BG,IAAI,EAAE;QACNC,OAAO,CAACF,IAAI,CAAC;QACb,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,SAAS,CAACO,IAAI,CAClCI,KAAK,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;UACnB,MAAMG,SAAS,GAAGC,IAAI,CAAEC,KAAK,CAC5BD,IAAI,CAACE,MAAM,EAAE,GAAGN,CAAC,CAAC;UACnBP,MAAM,CAAEH,SAAS,CAACO,IAAI,CAACI,KAAK,CAACE,SAAS,CAAC,CAACI,GAAG,CAAC;QAC5C;MACA,CAAC,CAAC,OAAMC,CAAC,EAAC;QACVC,KAAK,CAAED,CAAC,CAAC;MACT;IACA;IACAd,SAAS,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EACJ,oBACE;IAAK,SAAS,EAAC,+BAA+B;IAAA,uBAC9C,QAAC,SAAS;MAAA,UACTJ,SAAS,gBAAG;QAAQ,SAAS,EAAC,8DAA8D;QAAA,wBAC5F;UAAM,SAAS,EAAC,0EAA0E;UAAA,UAC1FD,KAAK,CAACqB;QAAM;UAAA;UAAA;UAAA;QAAA,QACN,eACN;UAAM,SAAS,EAAC,6EAA6E;UAAA,UAC7FrB,KAAK,CAACsB;QAAS;UAAA;UAAA;UAAA;QAAA,QACT,eACP;UAAK,SAAS,EAAC,wCAAwC;UAAC,GAAG,EAAEnB,GAAI;UAAC,OAAO,EAAC,MAAM;UAAC,GAAG,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACpF,gBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAoB;MAAA;MAAA;MAAA;IAAA;EACpB;IAAA;IAAA;IAAA;EAAA,QACN;AAEV,CAAC;AAAA,GAvCKJ,MAAM;AAAA,KAANA,MAAM;AAwCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}