{"ast":null,"code":"var _jsxFileName = \"/storage/emulated/0/Meme/src/components/Figure.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Container from './../Ui/Container.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Figure = props => {\n  _s();\n  const [memesArray, setMemesArray] = useState('');\n  const [img, setImg] = useState('');\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await fetch('https://api.imgflip.com/get_memes');\n        const gotData = await response.json();\n        setMemesArray(gotData);\n        for (let i = 0; i < memesArray.data.memes.length; i++) {\n          const randomUrl = Math.floor(Math.random() * i);\n          document.write(memesArray.data.memes[0].url);\n        }\n      } catch (e) {\n        alert(e);\n      }\n    }\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"figure--section w-full h-full\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: memesArray ? /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"w-full h-34 px-2 relative mx-auto mt-14 relative text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meme--text absolute -translate-x-1/2 text-4xl text-white font-bold top-5\",\n          children: props.Toptxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meme--text absolute -translate-x-1/2 text-4xl text-white font-bold bottom-5\",\n          children: props.Bottomtxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \" w-full h-full object-cover rounded-md\",\n          src: img,\n          Loading: \"lazy\",\n          alt: \"meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Figure, \"psxpJlnh4G+lsQCXKw+IO31N3Kk=\");\n_c = Figure;\nexport default Figure;\nvar _c;\n$RefreshReg$(_c, \"Figure\");","map":{"version":3,"names":["useState","useEffect","Container","Figure","props","memesArray","setMemesArray","img","setImg","fetchData","response","fetch","gotData","json","i","data","memes","length","randomUrl","Math","floor","random","document","write","url","e","alert","Toptxt","Bottomtxt"],"sources":["/storage/emulated/0/Meme/src/components/Figure.jsx"],"sourcesContent":["import { useState,useEffect } from 'react'\nimport Container from './../Ui/Container.jsx'\nconst Figure = (props) => {\n  const [memesArray, setMemesArray] = useState('');\nconst [img, setImg] = useState('');\nuseEffect (() => {\nasync function fetchData() {\ntry {\nconst response = await fetch('https://api.imgflip.com/get_memes');\nconst gotData = await response.json();\nsetMemesArray(gotData);\nfor(let i = 0; i < memesArray.data.memes.length; i++) {\nconst randomUrl = Math.floor(Math.random() * i);\ndocument.write(memesArray.data.memes[0].url)\n}\n}catch(e){\nalert(e);\n}\n}\nfetchData();\n}, []);\n  return(\n    <div className='figure--section w-full h-full'>\n    <Container>\n    {memesArray ? <figure className='w-full h-34 px-2 relative mx-auto mt-14 relative text-center'>\n     <span className='meme--text absolute -translate-x-1/2 text-4xl text-white font-bold top-5'>\n    {props.Toptxt}\n    </span>\n     <span className='meme--text absolute -translate-x-1/2 text-4xl text-white font-bold bottom-5'>\n    {props.Bottomtxt}\n    </span>\n    <img className=' w-full h-full object-cover rounded-md' src={img} Loading=\"lazy\" alt='meme'/>\n    </figure> : <span>Loading</span> }\n    </Container>\n    </div>\n    )\n}\nexport default Figure;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,uBAAuB;AAAA;AAC7C,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClCC,SAAS,CAAE,MAAM;IACjB,eAAeQ,SAAS,GAAG;MAC3B,IAAI;QACJ,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QACrCP,aAAa,CAACM,OAAO,CAAC;QACtB,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGT,UAAU,CAACU,IAAI,CAACC,KAAK,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;UACtD,MAAMI,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGP,CAAC,CAAC;UAC/CQ,QAAQ,CAACC,KAAK,CAAClB,UAAU,CAACU,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACQ,GAAG,CAAC;QAC5C;MACA,CAAC,QAAMC,CAAC,EAAC;QACTC,KAAK,CAACD,CAAC,CAAC;MACR;IACA;IACAhB,SAAS,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EACJ,oBACE;IAAK,SAAS,EAAC,+BAA+B;IAAA,uBAC9C,QAAC,SAAS;MAAA,UACTJ,UAAU,gBAAG;QAAQ,SAAS,EAAC,8DAA8D;QAAA,wBAC7F;UAAM,SAAS,EAAC,0EAA0E;UAAA,UAC1FD,KAAK,CAACuB;QAAM;UAAA;UAAA;UAAA;QAAA,QACN,eACN;UAAM,SAAS,EAAC,6EAA6E;UAAA,UAC7FvB,KAAK,CAACwB;QAAS;UAAA;UAAA;UAAA;QAAA,QACT,eACP;UAAK,SAAS,EAAC,wCAAwC;UAAC,GAAG,EAAErB,GAAI;UAAC,OAAO,EAAC,MAAM;UAAC,GAAG,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QACpF,gBAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAoB;MAAA;MAAA;MAAA;IAAA;EACpB;IAAA;IAAA;IAAA;EAAA,QACN;AAEV,CAAC;AAAA,GAlCKJ,MAAM;AAAA,KAANA,MAAM;AAmCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}