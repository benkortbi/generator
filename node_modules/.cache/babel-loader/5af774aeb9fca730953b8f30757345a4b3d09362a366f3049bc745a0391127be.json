{"ast":null,"code":"var _jsxFileName = \"/storage/emulated/0/Meme/src/components/Figure.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Container from './../Ui/Container.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Figure = props => {\n  _s();\n  const [memesArray, setMemesArray] = useState('');\n  const [src, setSrc] = useState('');\n  const fetchApi = async () => {\n    const url = 'https://api.imgflip.com/get_memes';\n    try {\n      const response = await fetch(url).json();\n      setMemesArray(response);\n    } catch (error) {\n      alert(error);\n    }\n  };\n  useEffect(() => {\n    setSrc(memesArray.data.memes[0].url);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"figure--section w-full h-full\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(\"figure\", {\n        className: \"w-full h-34 px-2 relative mx-auto mt-14 relative text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meme--text absolute -translate-x-1/2 text-4xl text-white font-bold top-5\",\n          children: props.Toptxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"meme--text absolute -translate-x-1/2 text-4xl text-white font-bold bottom-5\",\n          children: props.Bottomtxt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \" w-full h-full object-cover rounded-md\",\n          src: src,\n          alt: \"meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Figure, \"CKD7VYUE7FDZV3mxtVJ8XQGzGpM=\");\n_c = Figure;\nexport default Figure;\nvar _c;\n$RefreshReg$(_c, \"Figure\");","map":{"version":3,"names":["useState","useEffect","Container","Figure","props","memesArray","setMemesArray","src","setSrc","fetchApi","url","response","fetch","json","error","alert","data","memes","Toptxt","Bottomtxt"],"sources":["/storage/emulated/0/Meme/src/components/Figure.jsx"],"sourcesContent":["import { useState,useEffect } from 'react'\nimport Container from './../Ui/Container.jsx'\nconst Figure = (props) => {\n  const [memesArray, setMemesArray] = useState('')\n  const [src, setSrc] = useState('')\n  \n const fetchApi =  async () => {\n   const url = 'https://api.imgflip.com/get_memes';\n  try {\n    const response = await fetch(url).json();\n   setMemesArray(response) \n  } catch (error) {\n    alert(error);\n  }\n }\n useEffect(() => {\n   setSrc(memesArray.data.memes[0].url)\n })\n  return(\n    <div className='figure--section w-full h-full'>\n    <Container>\n    <figure className='w-full h-34 px-2 relative mx-auto mt-14 relative text-center'>\n     <span className='meme--text absolute -translate-x-1/2 text-4xl text-white font-bold top-5'>\n    {props.Toptxt}\n    </span>\n     <span className='meme--text absolute -translate-x-1/2 text-4xl text-white font-bold bottom-5'>\n    {props.Bottomtxt}\n    </span>\n    <img className=' w-full h-full object-cover rounded-md' src={src} alt='meme'/>\n    </figure>\n    </Container>\n    </div>\n    )\n}\nexport default Figure;"],"mappings":";;AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,OAAOC,SAAS,MAAM,uBAAuB;AAAA;AAC7C,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEnC,MAAMS,QAAQ,GAAI,YAAY;IAC5B,MAAMC,GAAG,GAAG,mCAAmC;IAChD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC,CAACG,IAAI,EAAE;MACzCP,aAAa,CAACK,QAAQ,CAAC;IACxB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,KAAK,CAACD,KAAK,CAAC;IACd;EACD,CAAC;EACDb,SAAS,CAAC,MAAM;IACdO,MAAM,CAACH,UAAU,CAACW,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACP,GAAG,CAAC;EACtC,CAAC,CAAC;EACD,oBACE;IAAK,SAAS,EAAC,+BAA+B;IAAA,uBAC9C,QAAC,SAAS;MAAA,uBACV;QAAQ,SAAS,EAAC,8DAA8D;QAAA,wBAC/E;UAAM,SAAS,EAAC,0EAA0E;UAAA,UAC1FN,KAAK,CAACc;QAAM;UAAA;UAAA;UAAA;QAAA,QACN,eACN;UAAM,SAAS,EAAC,6EAA6E;UAAA,UAC7Fd,KAAK,CAACe;QAAS;UAAA;UAAA;UAAA;QAAA,QACT,eACP;UAAK,SAAS,EAAC,wCAAwC;UAAC,GAAG,EAAEZ,GAAI;UAAC,GAAG,EAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA;IACrE;MAAA;MAAA;MAAA;IAAA;EACG;IAAA;IAAA;IAAA;EAAA,QACN;AAEV,CAAC;AAAA,GA/BKJ,MAAM;AAAA,KAANA,MAAM;AAgCZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}